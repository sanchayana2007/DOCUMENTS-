Enterprise: 100 GBB free , 4 GB RAM 
puppet forge : preexisting Modules having all tthe puppet code Github : Source code in Github 

============
puppet master>>
> vi /etc/hostname #So the hostname as Puppet master 
> apt-get purge puppet  puppet-common -y # Purge both teh puppet will be removed 
ls -ls /etc/puppet and /var/lib/puppet 
> wget https://xxxx/xxxx/xxxx/puppets-release-trustly.deb
> dpkg -i puppet.deb 
> ls -a *.deb 
> apt-get update 
> apt-get install puppetmaster -y # Set yes to all questions 
ls -ls /etc/puppet and /var/lib/puppet 

> service puppetmaster stop 
> ls -la /var/lib/puppet/ssl # Check the ssl file and geta folder 
> mv /var/lib/puppet/ssl /var/lib/puppet/ssl_bak
> /var/lib/puppet
> 
-------
[main]
#tepmlatedir # comment the template the dir 
[master]
cert=puppet 

> service puppetmaster start
> puppet cert list --all #This will show the + in front is been acepted against the puppet master own 

Files and Contents of File:
===========================
/etc/puppet
1) auth.conf : Who has access to what path folder of puppet 
---
path /certificate/
aith_any
method find , save
allow * 

2) fileserver.conf : When puppet master needs to configured as the file server 
---
[fileserver]
path /etc/puppet/files 
allow * 
---
files:///filename.testfile # We can use the kind of notation in the manifests to be set of 

puppet client Installation :
============================
> puppet help | tail -n 1 # Puppet should not present 
> wget https://xxxxx/xxxx/puppetlabs-release-trusty.deb
> sudo dpkg -i puppetlabs-release-trusty.deb
> sudo apt-get update
> apt-get install puppet -y # Ste yes to all questions 
> /etc/default/puppet
Start = yes # this will make start the agent whenevr the server is up 
> /etc/puppet/puppet.conf
---
[main]
[master] #change this to Agent 
[agent]

server=puppetmaster.sridemo.com # mention the server name same as certificate if multiple servers aremaster fail 
                                # over add those too 
  
  > /etc/hosts puppetmaster.sridemo.com 
  
  * Installing a agent using puppet possibilties provide a script 
  The PE package managment repo is created during installation of the master and servers packages over 
  HTTPS using the same port as the master (8140). This means agents dont require any new ports to be 
  open other than the one they already need to comunicate with master .
  When you run the isnatll script , it detects the OS on which it is runing , sets up an apt ,yum or zipper repo that refers 
  back puppet.conf and kicks of puppet run . 
  
  PE(Enterprise )n has package managment tools but he installation differs as per OS.
  > Install *nix agents with PE package managment (curl -k https://<MASTER HOSTNAME:> 8140/packages/current/install.bash | sudo bash)
  > Install *nix agents with ypur own package managment 
  

Steps for remove Puppet from the Server :
========================================
> apt-get purge puppet  puppet-common -y # Purge both teh puppet will be removed 
> apt-get autoremove -y 
> puppet cert clean puppetmaster.com # The name with teh domain of the machine is been shown over  ssl


puppet Agent>>
puppet help | tail -n 1  # get teh version of the Agent 


Puppet Tools :
================
facter:
------------
This tool will be run the msater to ge the information (OS,space,IP,node)

hiera :
-------------
All the resouse key : value are kept on hiera , if query name value will get  the return  value 


mcolllective:
---------------
framework used Orchestration (what comes after which node )

puppetdb:
----------------
PostSQL can store , logs , collections will get stored .

puppet dashboard/Foreman:
----------------------------

Geppeto:
----------
Teh puppet code wit eclipse is used for pushing puppet code to git 

ENC:(TO DO)
-----
A script or application which tell puppet which classes a node should have .
master > EncApp 'nodel'
This should output a yaml document 
ENCs can co-existwith standard node definitions in the site.pp and the classes declared in each in each 
sources are merged together .

Provision: Setting up an Application 
Deploy : pushing to the servers 
Configure: Changes is the configuration file , version contrl (dir of installtion )

Configuring Agents Certificate:
================================
* How to validate the Master certificate in Slave 
* What happens if the master certificate gets changed and does it needs to get reloaded in the agent .
* getting the certification from a CA (What does that mean )
* generating client certifiactes in Agents automatically Signed by the master .
* Autosigned can be used 
* Failure and issues best practices 
* is there way to do Orhestration 

puppet master>>
> puppet cert list 
It Shows the agent name and secure socket layer SHA256 32 digit code 
> puppet cert sign Agentname 

* ways to push changes to the agents 
* How to know in a agent which softwares are installed by puppet 
puppet Agent>>
> puppet agent -t # Request data from the master 

Architecture of Puppet:
=========================
Teh master Server componenets , Reporting , Security , content can be seperated 
Ex: master 1 : only Content Server

Flow of the puppet client and master :
=====================================
The master Server componenets , reporting , Security , content can be seperated 
Ex : master 1 : inly Content serer 

Pics 1 and Pics 2 (1:03:33) and (1:14:30)
i) Agent requiest after configuration lands of Master Plugin 
2) client send the Facts (Normalised data )to ECN(External Node classifier)
3) ENC will finalise the node details set the respective catalogue .
4) master complies a catalogue file(How teh nodes gets configured ), sent to teh client 
then the RAL (Ruby Absratect layer) will handle 
  if platform ="WIN "
    #install .exe 
    thsi stype of logic is autohandlesd by RAL and we dont have to mention 
    specifically .
    So a .pp file can be used for all OS types.(1:20:44) 
  5) It Runs the catlogue on the node and isntalls the binary 
  6) teh output of thsi trnaction is stored in the pupet db 
  
  Node reports back to the master 
  
  
  


Cretaing Resourses and Class :
==================================
* All kind of entities and scripting 
* how to add a new resourse 

resources-> Classes -> manifest.pp -> Module 

puppet master>>

> puppet resouse types # Should shopw all the resourses this master knwos of 
location of manifets 
> /etc/puppet/manifests.pp

Resourses:
----------
  file{'/etc/inet/inted.conf':
  ensure => '/etc/inet/inted.conf'
  }

puppet Agent>>
> puppet agent -t 
ls /etc/inet/inted.conf



class :
--------
class {'apache':}  # This class is taken from puppet forge 
{
 apache:vhost{'testserver,com',# A vhhosts name is defined the name is set in the predefined class vhostname 
 port => '80'
 docroot => '/var/www/html'
 
 }
 
 Creating manifests :
 ==========================
 etc/puppet/manifests/test_apache.pp
 class {'apache':} # takem from the Puppet forge , this will include default apache class
 {
 apache:vhost {'testserver.com', # A vhost resourse is defined 
 port => 80
 docroot => '/var/www/html'
 }
 
 

Apache installation using Puppet :
================================

puppet master>>
 
package{'httpd':
ensure => installed
}
 
service{'httpd':
ensure=> running 
} 
 
puppet Agent>>
> puppet agent -t 


Install php and mysql from puppet forge:
========================================= 
The modules are taken from puppetforge in 2 modes 
puppet master>>
> puppet module install mayflower-php
> puppet module install mysql 

** Is site.pp is the only file or setting the manifests
site.pp # Remove all the entries and only new should stay 

node default { #Replacing the default(all agents) with agent name will make it agent specific 
  include '::mysql::server'
  include '::php'
}
* How to pull only specific modules from the server on nodes .
* List of common errors in manifetsts files and ther identifications 

puppet Agent>>
> puppet agent -t  # Thsi should install the php/mysql overe there 

==========================
puppet master>>
puppet Agent>>
> puppet agent -t 
